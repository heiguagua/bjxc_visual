<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinawiserv.dsp.dir.mapper.catalog.DirDataOfflineMapper">

    <!-- 开启二级缓存 -->
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.chinawiserv.dsp.dir.entity.po.catalog.DirDataOffline">
        <id column="id" property="id"/>
        <result column="dcm_id" property="dcmId"/>
        <result column="offline_user_id" property="offlineUserId"/>
        <result column="offline_time" property="offlineTime"/>
        <result column="active_flag" property="activeFlag"/>
    </resultMap>

    <resultMap id="BaseResultVoMap" extends="BaseResultMap"
               type="com.chinawiserv.dsp.dir.entity.vo.catalog.DirDataOfflineVo">

    </resultMap>

    <!-- 通用查询过滤条件 -->
    <sql id="queryConditions">
        <where>
            <if test="id != null">
                t.id = #{id,jdbcType=VARCHAR}
            </if>
        </where>
    </sql>

    <select id="selectVoPage" parameterType="java.util.Map" resultMap="BaseResultVoMap">
        SELECT t.* FROM dir_data_offline t
        <include refid="queryConditions"></include>
    </select>

    <select id="selectVoById" parameterType="java.lang.String" resultMap="BaseResultVoMap">
        SELECT t.* FROM dir_data_offline t WHERE t.id = #{id}
    </select>

    <select id="selectVoCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(1) FROM dir_data_offline t
        <include refid="queryConditions"></include>
    </select>

    <insert id="baseInsert" parameterType="com.chinawiserv.dsp.dir.entity.po.catalog.DirDataOffline">
        insert into dir_data_offline(id,dcm_id,offline_user_id,offline_time,active_flag) values(
        #{id},#{dcmId},#{offlineUserId},#{offlineTime},#{activeFlag})
    </insert>

    <insert id="insertListData">
        insert into dir_data_offline(id,dcm_id,offline_user_id,offline_time,active_flag)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id},#{item.dcmId},#{item.offlineUserId},#{item.offlineTime},#{item.activeFlag})
        </foreach>
    </insert>

    <update id="baseUpdate" parameterType="com.chinawiserv.dsp.dir.entity.po.catalog.DirDataOffline">
        update dir_data_offline
        <set>
            <if test="id != null">
                id = #{id},
            </if>
            <if test="dcmId != null">
                dcm_id = #{dcmId},
            </if>
            <if test="offlineUserId != null">
                offline_user_id = #{offlineUserId},
            </if>
            <if test="offlineTime != null">
                offline_time = #{offlineTime},
            </if>
            <if test="activeFlag != null">
                active_flag = #{activeFlag},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="batchUpdateActiveFlag" parameterType="java.util.Map">
        <if test="ids != null and ids !='' ">
            update dir_data_offline
            <set>
                <if test="offlineUserId != null">
                    offline_user_id = #{offlineUserId},
                </if>
                <if test="offlineTime != null">
                    offline_time = #{offlineTime},
                </if>
                <if test="activeFlag != null">
                    active_flag = #{activeFlag},
                </if>
            </set>
            where dcm_id in
            <foreach collection="ids" open="(" close=")" item="item" separator=",">
                #{item, jdbcType=VARCHAR}
            </foreach>
        </if>
    </update>

    <delete id="baseDelete" parameterType="java.util.Map">
        delete from dir_data_offline
        <include refid="deleteWhereCause"/>
    </delete>

    <sql id="deleteWhereCause">
        <where>
            <if test="id != null">
                id = #{id}
            </if>
        </where>
    </sql>


</mapper>

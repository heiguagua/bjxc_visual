<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinawiserv.dsp.dir.mapper.catalog.DirDatasetClassifyMapMapper">

    <!-- 开启二级缓存 -->
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.chinawiserv.dsp.dir.entity.po.catalog.DirDatasetClassifyMap">
        <id column="id" property="id"/>
        <result column="dataset_id" property="datasetId"/>
        <result column="classify_id" property="classifyId"/>
        <result column="info_resource_code" property="infoResourceCode"/>
        <result column="status" property="status"/>
        <result column="rel_flag" property="relFlag"/>
        <result column="update_user_id" property="updateUserId"/>
        <result column="update_time" property="updateTime"/>
        <result column="delete_flag" property="deleteFlag"/>
    </resultMap>

    <resultMap id="BaseResultVoMap" extends="BaseResultMap"
               type="com.chinawiserv.dsp.dir.entity.vo.catalog.DirDatasetClassifyMapVo">
        <result column="dataset_name" property="datasetName"/>
        <result column="classify_name" property="classifyName"/>
        <result column="classify_structure_name" property="classifyStructureName"/>
        <result column="dept_name" property="deptName"/>
        <result column="publish_type" property="publishType"/>
    </resultMap>

    <!-- 通用查询过滤条件 -->
    <sql id="queryConditions">
        <where>
            t.delete_flag =0
            <if test="id != null">
                and t.id = #{id,jdbcType=VARCHAR}
            </if>
            <if test="datasetId != null">
                and t.dataset_id = #{datasetId,jdbcType=VARCHAR}
            </if>
            <if test="status != null and status!='' ">
                and t.status = #{status,jdbcType=VARCHAR}
            </if>
            <if test="relFlag != null">
                and t.rel_flag = #{relFlag,jdbcType=INTEGER}
            </if>
            <if test="allStatus != null and allStatus!='' ">
                and t.status in
                <foreach collection="allStatus" open="(" close=")" item="item" separator=",">
                    #{item, jdbcType=VARCHAR}
                </foreach>
            </if>
            <if test="datasetName!= null and datasetName !='' ">
                and d.dataset_name like concat('%',#{datasetName,jdbcType=VARCHAR},'%')
            </if>
            <if test="classifyId!= null and classifyId !='' ">
                and t.classify_id in (select id from dir_classify where delete_flag=0 and (id = #{classifyId, jdbcType=VARCHAR} or
                tree_code like concat((select tree_code from dir_classify where id=#{classifyId, jdbcType=VARCHAR}),';%')))
            </if>
            <if test="allRegionCode!= null and allRegionCode !='' ">
                and t.dataset_id in (select id from dir_dataset where delete_flag=0 and region_code in (${allRegionCode}))
            </if>
            <if test="loginUserIdForAuthority != null and loginUserIdForAuthority!='' ">
                and t.classify_id in(
                    select id  from dir_classify t,
                    (select dc.tree_code from dir_classify_authority dca
                    left join dir_classify dc on dca.classify_id = dc.id and dc.delete_flag=0
                    where dca.auth_obj_type ='2' and dca.auth_obj_id = #{loginUserIdForAuthority,jdbcType=VARCHAR}
                    ) a where t.delete_flag=0 and t.tree_code like CONCAT(a.tree_code, ';%')
                    union
                    select dca1.classify_id from dir_classify_authority dca1
                    left join dir_classify dc1 on dca1.classify_id = dc1.id and dc1.delete_flag=0
                    where dca1.auth_obj_type ='2' and dca1.auth_obj_id = #{loginUserIdForAuthority,jdbcType=VARCHAR}
                    union
                    select id  from dir_classify c,
                    (select dc.tree_code from dir_classify_authority dca
                    left join dir_classify dc on dca.classify_id = dc.id and dc.delete_flag=0
                    where dca.auth_obj_type ='1' and dca.auth_obj_id =  (select su.dept_id from sys_user su where su.delete_flag=0 and su.id = #{loginUserIdForAuthority,jdbcType=VARCHAR})
                    )b where c.delete_flag=0 and c.tree_code like CONCAT(b.tree_code, ';%')
                    union
                    select dca2.classify_id from dir_classify_authority dca2
                    left join dir_classify dc2 on dca2.classify_id = dc2.id and dc2.delete_flag=0
                    where dca2.auth_obj_type ='1' and dca2.auth_obj_id =  (select su.dept_id from sys_user su where su.delete_flag=0 and su.id = #{loginUserIdForAuthority,jdbcType=VARCHAR})
                )
                and t.dataset_id in(
                    select id from dir_dataset where delete_flag=0 and charge_dept_id in(
                        select id from sys_dept sd1,(
                        select de.tree_code from sys_dept de
                        where de.delete_flag=0 and de.id=(select dept_id from sys_user where delete_flag=0 and id=#{loginUserIdForAuthority,jdbcType=VARCHAR} )
                        ) a where sd1.delete_flag=0 and sd1.tree_code like concat(a.tree_code, ';%')
                        union
                        select dept_id from sys_user where delete_flag=0 and id=#{loginUserIdForAuthority,jdbcType=VARCHAR}
                        union
                        select id from sys_dept sd2,(
                        select de.tree_code from sys_dept_authority sda
                        left join sys_dept de on de.id=sda.dept_id and de.delete_flag=0
                        where sda.auth_obj_type='2' and sda.auth_obj_id=#{loginUserIdForAuthority,jdbcType=VARCHAR}
                        ) b where sd2.delete_flag=0 and sd2.tree_code like concat(b.tree_code, ';%')
                        union
                        select sda1.dept_id from sys_dept_authority sda1
                        left join sys_dept de1 on sda1.dept_id = de1.id and de1.delete_flag=0
                        where sda1.auth_obj_type='2' and sda1.auth_obj_id=#{loginUserIdForAuthority,jdbcType=VARCHAR}
                        union
                        select id from sys_dept sd3,(
                        select de.tree_code from sys_dept_authority sda
                        left join sys_dept de on de.id=sda.dept_id and de.delete_flag=0
                        where sda.auth_obj_type='1' and sda.auth_obj_id=(select dept_id from sys_user where delete_flag=0 and id=#{loginUserIdForAuthority,jdbcType=VARCHAR} )
                        ) c where sd3.delete_flag=0 and sd3.tree_code like concat(c.tree_code, ';%')
                        union
                        select sda2.dept_id from sys_dept_authority sda2
                        left join sys_dept de2 on sda2.dept_id = de2.id and de2.delete_flag=0
                        where sda2.auth_obj_type='1' and sda2.auth_obj_id=(select dept_id from sys_user where delete_flag=0 and id=#{loginUserIdForAuthority,jdbcType=VARCHAR} )
                    )
                )
            </if>
        </where>
    </sql>

    <select id="baseSelect" parameterType="java.util.Map" resultMap="BaseResultVoMap">
        select * from dir_dataset_classify_map t
        <include refid="queryConditions"></include>
    </select>
    
    <select id="selectVoPage" parameterType="java.util.Map" resultMap="BaseResultVoMap">
        SELECT t.*,d.dataset_name,c.classify_name,c.classify_structure_name,de.dept_name as dept_name FROM dir_dataset_classify_map t
            left join dir_dataset d on t.dataset_id=d.id and d.delete_flag=0
            left join dir_classify c on t.classify_id=c.id and c.delete_flag=0
            left join sys_dept de on d.belong_dept_type=de.id
        <include refid="queryConditions"></include>
    </select>

    <select id="selectVoPageForReleased" parameterType="java.util.Map" resultMap="BaseResultVoMap">
        SELECT t.*,d.dataset_name,c.classify_name,c.classify_structure_name,de.dept_name,p.publish_type
        FROM dir_dataset_classify_map t
        left join dir_dataset d on t.dataset_id=d.id and d.delete_flag=0
        left join dir_classify c on t.classify_id=c.id and c.delete_flag=0
        left join sys_dept de on d.charge_dept_id=de.id and de.delete_flag=0
        left join dir_data_publish p on t.id=p.dcm_id and p.active_flag="1"
        <include refid="queryConditions"></include>
    </select>

    <select id="selectVoById" parameterType="java.lang.String" resultMap="BaseResultVoMap">
        SELECT t.* FROM dir_dataset_classify_map t WHERE t.delete_flag =0 and t.id = #{id}
    </select>

    <select id="selectVoCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(1) FROM dir_dataset_classify_map t
            left join dir_dataset d on t.dataset_id=d.id and d.delete_flag=0
            left join dir_classify c on t.classify_id=c.id and c.delete_flag=0
            left join sys_dept p on d.belong_dept_id=p.id and p.delete_flag=0
        <include refid="queryConditions"></include>
    </select>

    <select id="checkDatasetName" resultMap="BaseResultVoMap">
        SELECT t.* FROM dir_dataset_classify_map t
            left join dir_dataset d on t.dataset_id=d.id and d.delete_flag=0
            WHERE t.delete_flag =0 and d.dataset_name = #{datasetName} and t.classify_id in(${classifyIds})
    </select>

    <insert id="baseInsert" parameterType="com.chinawiserv.dsp.dir.entity.po.catalog.DirDatasetClassifyMap">
        insert into
        dir_dataset_classify_map(id,dataset_id,classify_id,info_resource_code,status,rel_flag,update_user_id,update_time)
        values(
        #{id},#{datasetId},#{classifyId},#{infoResourceCode},#{status},#{relFlag},#{updateUserId},#{updateTime}
        )
    </insert>

    <insert id="insertListItem">
        insert into dir_dataset_classify_map(id,dataset_id,classify_id,info_resource_code,status,rel_flag,update_user_id,update_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.id},#{item.datasetId},#{item.classifyId},#{item.infoResourceCode},#{item.status},#{item.relFlag},#{item.updateUserId},#{item.updateTime})
        </foreach>
    </insert>

    <update id="baseUpdate" parameterType="com.chinawiserv.dsp.dir.entity.po.catalog.DirDatasetClassifyMap">
        update dir_dataset_classify_map
        <set>
            <if test="id != null">
                id = #{id},
            </if>
            <if test="datasetId != null">
                dataset_id = #{datasetId},
            </if>
            <if test="classifyId != null">
                classify_id = #{classifyId},
            </if>
            <if test="infoResourceCode != null">
                info_resource_code = #{infoResourceCode},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="relFlag != null">
                rel_flag = #{relFlag},
            </if>
            <if test="updateUserId != null">
                update_user_id = #{updateUserId},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag},
            </if>
        </set>
        where id = #{id}
    </update>

    <update id="batchUpdateStatus" parameterType="java.util.Map">
        <if test="ids != null and ids!='' ">
            update dir_dataset_classify_map
            <set>
                <if test="status != null">
                    status = #{status},
                </if>
                <if test="relFlag != null">
                    rel_flag = #{relFlag},
                </if>
                <if test="updateUserId != null">
                    update_user_id = #{updateUserId},
                </if>
                <if test="updateTime != null">
                    update_time = #{updateTime},
                </if>
                <if test="deleteFlag != null">
                    delete_flag = #{deleteFlag},
                </if>
            </set>
            where id in
            <foreach collection="ids" open="(" close=")" item="item" separator=",">
                #{item, jdbcType=VARCHAR}
            </foreach>
            <!--where id in (${ids})-->
        </if>
    </update>

    <delete id="baseDelete" parameterType="java.util.Map">
        delete from dir_dataset_classify_map
        <include refid="deleteWhereCause"/>
    </delete>

    <delete id="flagDelete" parameterType="java.util.Map">
        update dir_dataset_classify_map set delete_flag=1
        <include refid="deleteWhereCause"/>
    </delete>

    <sql id="deleteWhereCause">
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="datasetIds!=null and datasetIds!='' ">
                and dataset_id in
                <foreach collection="datasetIds" open="(" close=")" item="item" separator=",">
                    #{item, jdbcType=VARCHAR}
                </foreach>
            </if>
        </where>
    </sql>

    <select id="selectDatasetTotalCountForClassify" resultType="java.lang.Integer">
        SELECT count(distinct(t.dataset_id)) FROM dir_dataset_classify_map t
        where t.delete_flag=0 and t.classify_id in (
        select id from dir_classify where tree_code=(select tree_code from dir_classify where classify_type=#{classifyType} and region_code=#{regionCode})
        or tree_code like concat((select tree_code from dir_classify where classify_type=#{classifyType} and region_code=#{regionCode}),';%')
        )
    </select>

    <select id="selectDatasetCountForClassify" resultType="java.lang.Integer">
        SELECT count(1) FROM dir_dataset_classify_map
        where delete_flag=0 and classify_id in (
        select id from dir_classify where tree_code=#{treeCode} or
        tree_code like concat(#{treeCode},';%')
        )
    </select>

    <select id="selectDatasetNumWithChildClassify" resultType="java.util.HashMap">
        SELECT t.`classify_name` AS `name`,COUNT(a.tree_code) AS `value`
        FROM `dir_classify` t
        LEFT JOIN
        (SELECT t1.`tree_code` FROM `dir_classify` t1
        JOIN dir_dataset_classify_map ddcm
        ON t1.`id` = ddcm.`classify_id`) a
        ON LOCATE(CONCAT(t.`tree_code`, ';'),a.tree_code) = 1
        WHERE t.`fid` = (SELECT id FROM dir_classify WHERE classify_type=#{classifyType} AND region_code=#{regionCode})
        GROUP BY t.`classify_name`
        ORDER BY `value` DESC
        <if test="topNum != 0 ">
            limit 0, #{topNum}
        </if>
    </select>

    <select id="selectDatasetCountForStatus" resultType="java.util.Map">
        select a.num as unRegisteNum,b.num as unAuditNum,c.num as unReleaseNum,d.num as releasedNum from
        (select count(id) as num from dir_dataset_classify_map where delete_flag=0 and status in('0','2','4','6')
            and classify_id in(select id from dir_classify where region_code=#{regionCode})) a,
        (select count(id) as num from dir_dataset_classify_map where delete_flag=0 and status in('1')
            and classify_id in(select id from dir_classify where region_code=#{regionCode})) b,
        (select count(id) as num from dir_dataset_classify_map where delete_flag=0 and status in('3')
            and classify_id in(select id from dir_classify where region_code=#{regionCode})) c,
        (select count(id) as num from dir_dataset_classify_map where delete_flag=0 and status in('5')
            and classify_id in(select id from dir_classify where region_code=#{regionCode})) d
    </select>


</mapper>

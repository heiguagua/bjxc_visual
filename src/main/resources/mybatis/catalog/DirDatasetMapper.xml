<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinawiserv.dsp.dir.mapper.catalog.DirDatasetMapper">

    <!-- 开启二级缓存 -->
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>
    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.chinawiserv.dsp.dir.entity.po.catalog.DirDataset">
        <id column="id" property="id" />
        <result column="region_code" property="regionCode" />
        <result column="charge_dept_id" property="chargeDeptId" />
        <result column="dataset_code" property="datasetCode" />
        <result column="dataset_name" property="datasetName" />
        <result column="alias" property="alias" />
        <result column="belong_dept_type" property="belongDeptType" />
        <result column="belong_dept_id" property="belongDeptId" />
        <result column="belong_dept_name" property="belongDeptName" />
        <result column="belong_dept_no" property="belongDeptNo" />
        <result column="dataset_desc" property="datasetDesc" />
        <result column="share_type" property="shareType" />
        <result column="share_condition" property="shareCondition" />
        <result column="share_method_category" property="shareMethodCategory" />
        <result column="share_method" property="shareMethod" />
        <result column="share_method_desc" property="shareMethodDesc" />
        <result column="is_open" property="isOpen" />
        <result column="open_condition" property="openCondition" />
        <result column="update_frequency" property="updateFrequency" />
        <result column="rel_dataset_code" property="relDatasetCode" />
        <result column="storage_medium" property="storageMedium" />
        <result column="storage_location" property="storageLocation" />
        <result column="data_level" property="dataLevel" />
        <result column="data_index_system" property="dataIndexSystem" />
        <result column="secret_flag" property="secretFlag" />
        <result column="source_type" property="sourceType" />
        <result column="status" property="status" />
        <result column="create_user_id" property="createUserId" />
        <result column="create_time" property="createTime" />
        <result column="update_user_id" property="updateUserId" />
        <result column="update_time" property="updateTime" />
        <result column="delete_flag" property="deleteFlag" />
    </resultMap>

    <resultMap id="BaseResultVoMap" extends="BaseResultMap"
               type="com.chinawiserv.dsp.dir.entity.vo.catalog.DirDatasetVo">
        <result column="classify_name" property="classifyName"/>
        <result column="classify_status" property="classifyStatus"/>
        <result column="dept_name" property="deptName"/>
        <result column="source_type_name" property="datasetSourceTypeName" />
        <result column="item_nums" property="itemNums"/>
        <result column="region_dept_code" property="regionDeptCode"/>
        <result column="region_dept_name" property="regionDeptName"/>
        <result column="transferId" property="transferId" />
    </resultMap>

    <resultMap id="ExtResultVoMap" extends="BaseResultVoMap"
               type="com.chinawiserv.dsp.dir.entity.vo.catalog.DirDatasetVo">
        <association property="ext" javaType="com.chinawiserv.dsp.dir.entity.po.catalog.DirDatasetExtFormat">
            <result column="format_category" property="formatCategory"/>
            <result column="format_type" property="formatType"/>
            <result column="format_info" property="formatInfo"/>
        </association>
        <association property="transfer" column="transferId"
                     javaType="com.chinawiserv.dsp.dir.entity.po.catalog.DirDataTransfer"
                     select="selectDirTransferList"></association>
        <association property="serviceNum" column="transferId" javaType="Integer" select="getServiceNum"></association>

        <association property="survey" javaType="com.chinawiserv.dsp.dir.entity.po.catalog.DirDatasetSurvey">
            <result column="total_storage" property="totalStorage" />
            <result column="structure_count" property="structureCount" />
            <result column="shared_storage" property="sharedStorage" />
            <result column="shared_structure_count" property="sharedStructureCount" />
            <result column="opened_storage" property="openedStorage" />
            <result column="opened_structure_count" property="openedStructureCount" />
        </association>
    </resultMap>

    <resultMap id="DirDataTransferBaseResultMap"
               type="com.chinawiserv.dsp.dir.entity.po.catalog.DirDataTransfer">
        <id column="id" property="id" />
        <result column="dcm_id" property="dcmId" />
        <result column="transfer_user_id" property="transferUserId" />
        <result column="transfer_user_name" property="transferUserName" />
        <result column="transfer_time" property="transferTime" />
        <result column="trasnfer_scope" property="trasnferScope" />
        <result column="transfer_status" property="transferStatus" />
    </resultMap>
    <!-- 通用查询过滤条件 -->
    <sql id="queryConditions">
        <where>
            t.delete_flag =0
            <if test="id != null">
                and t.id = #{id,jdbcType=VARCHAR}
            </if>
            <if test="datasetName != null and datasetName !='' ">
                and t.dataset_name like concat('%',#{datasetName,jdbcType=VARCHAR},'%')
            </if>
            <if test="allRegionCode!= null and allRegionCode !='' ">
                and t.region_code in (${allRegionCode})
            </if>
            <if test="loginUserIdForAuthority != null and loginUserIdForAuthority!='' ">
                and t.charge_dept_id in(
                    select id from sys_dept sd1,(
                    select de.tree_code from sys_dept de
                    where de.delete_flag=0 and de.id=(select dept_id from sys_user where delete_flag=0 and id=#{loginUserIdForAuthority,jdbcType=VARCHAR} )
                    ) a where sd1.delete_flag=0 and sd1.tree_code like concat(a.tree_code, ';%')
                    union
                    select dept_id from sys_user where delete_flag=0 and id=#{loginUserIdForAuthority,jdbcType=VARCHAR}
                    union
                    select id from sys_dept sd2,(
                    select de.tree_code from sys_dept_authority sda
                    left join sys_dept de on de.id=sda.dept_id and de.delete_flag=0
                    where sda.auth_obj_type='2' and sda.auth_obj_id=#{loginUserIdForAuthority,jdbcType=VARCHAR}
                    ) b where sd2.delete_flag=0 and sd2.tree_code like concat(b.tree_code, ';%')
                    union
                    select sda1.dept_id from sys_dept_authority sda1
                        left join sys_dept de1 on sda1.dept_id = de1.id and de1.delete_flag=0
                        where sda1.auth_obj_type='2' and sda1.auth_obj_id=#{loginUserIdForAuthority,jdbcType=VARCHAR}
                    union
                    select id from sys_dept sd3,(
                    select de.tree_code from sys_dept_authority sda
                    left join sys_dept de on de.id=sda.dept_id and de.delete_flag=0
                    where sda.auth_obj_type='1' and sda.auth_obj_id=(select dept_id from sys_user where delete_flag=0 and id=#{loginUserIdForAuthority,jdbcType=VARCHAR} )
                    ) c where sd3.delete_flag=0 and sd3.tree_code like concat(c.tree_code, ';%')
                    union
                    select sda2.dept_id from sys_dept_authority sda2
                    left join sys_dept de2 on sda2.dept_id = de2.id and de2.delete_flag=0
                    where sda2.auth_obj_type='1' and sda2.auth_obj_id=(select dept_id from sys_user where delete_flag=0 and id=#{loginUserIdForAuthority,jdbcType=VARCHAR} )
                )
            </if>
        </where>
    </sql>

    <!--编目列表目录类别查询条件过滤 -->
    <sql id="classifyConditions">
        <where>
            <if test="classifyId!= null and classifyId !='' ">
                and m.classify_id in (select id from dir_classify where delete_flag=0 and tree_code like concat((select tree_code from dir_classify where delete_flag=0 and id=#{classifyId, jdbcType=VARCHAR}),'%'))
            </if>
            <if test="loginUserIdForAuthority != null and loginUserIdForAuthority!='' ">
                and m.classify_id in(
                    select id  from dir_classify t,
                    (select dc.tree_code from dir_classify_authority dca
                    left join dir_classify dc on dca.classify_id = dc.id and dc.delete_flag=0
                    where dca.auth_obj_type ='2' and dca.auth_obj_id = #{loginUserIdForAuthority,jdbcType=VARCHAR}
                    ) a where t.delete_flag=0 and t.tree_code like CONCAT(a.tree_code, ';%')
                    union
                    select dca1.classify_id from dir_classify_authority dca1
                    left join dir_classify dc1 on dca1.classify_id = dc1.id and dc1.delete_flag=0
                    where dca1.auth_obj_type ='2' and dca1.auth_obj_id = #{loginUserIdForAuthority,jdbcType=VARCHAR}
                    union
                    select id  from dir_classify c,
                    (select dc.tree_code from dir_classify_authority dca
                    left join dir_classify dc on dca.classify_id = dc.id and dc.delete_flag=0
                    where dca.auth_obj_type ='1' and dca.auth_obj_id =  (select su.dept_id from sys_user su where su.delete_flag=0 and su.id = #{loginUserIdForAuthority,jdbcType=VARCHAR})
                    )b where c.delete_flag=0 and c.tree_code like CONCAT(b.tree_code, ';%')
                    union
                    select dca2.classify_id from dir_classify_authority dca2
                    left join dir_classify dc2 on dca2.classify_id = dc2.id and dc2.delete_flag=0
                    where dca2.auth_obj_type ='1' and dca2.auth_obj_id =  (select su.dept_id from sys_user su where su.delete_flag=0 and su.id = #{loginUserIdForAuthority,jdbcType=VARCHAR})
                )
            </if>
            <if test="mstatus!=null and mstatus!=''">
                and m.status>=#{mstatus}

            </if>
        </where>
    </sql>
    <!-- 查询已审核待上传报告 -->
    <select id="selectDirReportPage" parameterType="java.util.Map" resultMap="ExtResultVoMap">
        select sub.*,MAX(IFNULL(m.status,0)) AS classify_status,
        GROUP_CONCAT(c.classify_structure_name) AS classify_name,m.id as transferId from(
        select t.id,t.dataset_name,t.create_time,t.update_time,t.source_type,de.dept_name,
        di.dict_name as source_type_name,count(it.dataset_id) as item_nums
        FROM dir_dataset t
        left join sys_dept de on t.belong_dept_id=de.id and
        de.delete_flag=0
        left join sys_dict di on t.source_type=di.dict_code
        and
        di.category='datasetSourceType'
        left join dir_dataitem it on
        t.id=it.dataset_id and it.delete_flag=0
        <include refid="queryConditions"></include>
        group by t.id ) sub
        left join dir_dataset_classify_map m on
        sub.id=m.dataset_id and
        m.delete_flag=0
        left join dir_classify c on
        m.classify_id=c.id and c.delete_flag=0
        <include refid="classifyConditions"></include>
        group by sub.id
    </select>

    <select id="selectDirReportCount" resultType="Integer"
            parameterType="map">

        SELECT COUNT(A.id) FROM (
        select sub.id,sub.create_time from(
        select
        t.id,t.dataset_name,t.create_time,t.update_time,t.source_type,de.dept_name,
        di.dict_name as source_type_name,count(it.dataset_id) as item_nums
        FROM dir_dataset t
        left join sys_dept de on t.belong_dept_id=de.id and
        de.delete_flag=0
        left join sys_dict di on t.source_type=di.dict_code
        and
        di.category='datasetSourceType'
        left join dir_dataitem it on
        t.id=it.dataset_id and it.delete_flag=0
        <include refid="queryConditions"></include>
        group by t.id ) sub
        left join dir_dataset_classify_map m on
        sub.id=m.dataset_id and
        m.delete_flag=0
        left join dir_classify c on
        m.classify_id=c.id and c.delete_flag=0
        <include refid="classifyConditions"></include>
        group by sub.id

        ) as A
    </select>
    <select id="selectDirTransferList" parameterType="String"
            resultMap="DirDataTransferBaseResultMap">
        SELECT IFNULL(trasnfer_scope,"")
        trasnfer_scope,IFNULL(transfer_status,"") transfer_status FROM
        dir_data_transfer WHERE dcm_id=#{transferId} ORDER BY transfer_time DESC LIMIT
        0,1;
    </select>
    <select id="getServiceNum" parameterType="map" resultType="Integer">
        select count(*) from dir_dataset_service_map where obj_id=#{transferId}
    </select>
    <select id="getTransferLst" parameterType="map"
            resultType="com.chinawiserv.dsp.dir.entity.po.catalog.DirDataTransfer">
        select * from dir_data_transfer where dcm_id=#{transferId}
    </select>
    <insert id="insertDirTransfer"
            parameterType="com.chinawiserv.dsp.dir.entity.po.catalog.DirDataTransfer">
        INSERT INTO dir_data_transfer
        (id,dcm_id,transfer_user_id,transfer_user_name,transfer_time,trasnfer_scope,transfer_status)
        VALUES
        (#{id},#{dcmId},#{transferUserId},#{transferUserName},#{transferTime},#{trasnferScope},#{transferStatus})
    </insert>
    <select id="selectVoPage" parameterType="java.util.Map" resultMap="BaseResultVoMap">
        SELECT t.* FROM dir_dataset t
        <include refid="queryConditions"></include>
    </select>

    <select id="selectInfoPage" parameterType="java.util.Map" resultMap="BaseResultVoMap">
        select sub.*,MAX(IFNULL(m.status,0)) AS classify_status,GROUP_CONCAT(c.classify_structure_name) AS classify_name from(
        select t.id,t.dataset_name,t.create_time,t.update_time,t.source_type,de.region_dept_name as dept_name,
        di.dict_name as source_type_name,count(it.dataset_id) as item_nums FROM dir_dataset t
        left join v_sys_region_dept de on t.belong_dept_type=de.id
        left join sys_dict di on t.source_type=di.dict_code and di.category='datasetSourceType'
        left join dir_dataitem it on t.id=it.dataset_id and it.delete_flag=0
        <include refid="queryConditions"></include>
        group by t.id ) sub
        left join  dir_dataset_classify_map m on sub.id=m.dataset_id and m.delete_flag=0
        left join dir_classify c on m.classify_id=c.id and c.delete_flag=0
        <include refid="classifyConditions"></include>
        group by sub.id
    </select>

    <select id="selectVoById" parameterType="java.lang.String" resultMap="ExtResultVoMap">
        SELECT t.*,f.format_category,f.format_type,f.format_info,su.total_storage,su.structure_count,
        su.shared_storage,su.shared_structure_count,su.opened_storage,su.opened_structure_count FROM dir_dataset t
        left join dir_dataset_ext_format f on t.id=f.dataset_id
        left join dir_dataset_survey su on t.id=su.dataset_id
        WHERE t.delete_flag =0 and t.id = #{id}
    </select>

    <select id="selectDatasetInfoById" parameterType="java.lang.String" resultMap="ExtResultVoMap">
        select t.*,f.format_category,f.format_type,f.format_info,de.dept_name,su.total_storage,su.structure_count,
        su.shared_storage,su.shared_structure_count,su.opened_storage,su.opened_structure_count,
        rd.region_dept_code,rd.region_dept_name
        from dir_dataset t
        left join dir_dataset_ext_format f on t.id=f.dataset_id
        left join sys_dept de on t.belong_dept_id=de.id and de.delete_flag=0
        left join dir_dataset_survey su on t.id=su.dataset_id
        left join v_sys_region_dept rd on t.belong_dept_type=rd.id
        where t.id = #{id}
    </select>

    <select id="selectVoCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(1) FROM dir_dataset t
        <include refid="queryConditions"></include>
    </select>

    <insert id="baseInsert" parameterType="com.chinawiserv.dsp.dir.entity.po.catalog.DirDataset">
        insert into dir_dataset(id,region_code,charge_dept_id,dataset_code,dataset_name,alias,belong_dept_type,belong_dept_id,belong_dept_name,belong_dept_no,dataset_desc,share_type,share_condition,share_method_category,share_method,share_method_desc,is_open,open_condition,update_frequency,rel_dataset_code,storage_medium,storage_location,data_level,data_index_system,secret_flag,source_type,status,create_user_id,create_time,update_user_id,update_time) values(
        #{id},#{regionCode},#{chargeDeptId},#{datasetCode},#{datasetName},#{alias},#{belongDeptType},#{belongDeptId},#{belongDeptName},#{belongDeptNo},#{datasetDesc},#{shareType},#{shareCondition},#{shareMethodCategory},#{shareMethod},#{shareMethodDesc},#{isOpen},#{openCondition},#{updateFrequency},#{relDatasetCode},#{storageMedium},#{storageLocation},#{dataLevel},#{dataIndexSystem},#{secretFlag},#{sourceType},#{status},#{createUserId},#{createTime},#{updateUserId},#{updateTime})
    </insert>

    <insert id="batchInsert" parameterType="com.chinawiserv.dsp.dir.entity.po.catalog.DirDataset">
        insert into dir_dataset(id,region_code,charge_dept_id,dataset_code,dataset_name,alias,belong_dept_type,belong_dept_id,belong_dept_name,belong_dept_no,dataset_desc,share_type,share_condition,share_method_category,share_method,share_method_desc,is_open,open_condition,update_frequency,rel_dataset_code,storage_medium,storage_location,data_level,data_index_system,secret_flag,source_type,status,create_user_id,create_time,update_user_id,update_time,delete_flag) values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.id},#{item.regionCode},#{item.chargeDeptId},#{item.datasetCode},#{item.datasetName},#{item.alias},#{item.belongDeptType},
            #{item.belongDeptId},#{item.belongDeptName},#{item.belongDeptNo},#{item.datasetDesc},#{item.shareType},#{item.shareCondition},#{item.shareMethodCategory},
            #{item.shareMethod},#{item.shareMethodDesc},#{item.isOpen},#{item.openCondition},#{item.updateFrequency},
            #{item.relDatasetCode},#{item.storageMedium},#{item.storageLocation},#{item.dataLevel},#{item.dataIndexSystem},
            #{item.secretFlag},#{item.sourceType},#{item.status},#{item.createUserId},#{item.createTime},#{item.updateUserId},
            #{item.updateTime},#{item.deleteFlag}
            )
        </foreach>
    </insert>

    <select id="extSelect" parameterType="java.lang.String" resultType="java.util.Map">
        select * from dir_dataset_ext_format where dataset_id = #{datasetId}
    </select>

    <insert id="extInsert" parameterType="com.chinawiserv.dsp.dir.entity.po.catalog.DirDatasetExtFormat">
        insert into dir_dataset_ext_format (id,dataset_id,format_category,format_type,format_info)
        values(#{id}, #{datasetId}, #{formatCategory}, #{formatType}, #{formatInfo})
    </insert>

    <insert id="extUpdate" parameterType="com.chinawiserv.dsp.dir.entity.po.catalog.DirDatasetExtFormat">
        update dir_dataset_ext_format
        <set>
            <if test="formatCategory != null">
                format_category = #{formatCategory},
            </if>
            <if test="formatType != null">
                format_type = #{formatType},
            </if>
            <if test="formatInfo != null">
                format_info = #{formatInfo},
            </if>
        </set>
        where dataset_id = #{datasetId}
    </insert>

    <update id="baseUpdate" parameterType="com.chinawiserv.dsp.dir.entity.po.catalog.DirDataset">
        update dir_dataset
        <set>
            <if test="id != null">
                id = #{id},
            </if>
            <if test="regionCode != null">
                region_code = #{regionCode},
            </if>
            <if test="chargeDeptId != null">
                charge_dept_id = #{chargeDeptId},
            </if>
            <if test="datasetCode != null">
                dataset_code = #{datasetCode},
            </if>
            <if test="datasetName != null">
                dataset_name = #{datasetName},
            </if>
            <if test="alias != null">
                alias = #{alias},
            </if>
            <if test="belongDeptType != null">
                belong_dept_type = #{belongDeptType},
            </if>
            <if test="belongDeptId != null">
                belong_dept_id = #{belongDeptId},
            </if>
            <if test="belongDeptName != null">
                belong_dept_name = #{belongDeptName},
            </if>
            <if test="belongDeptNo != null">
                belong_dept_no = #{belongDeptNo},
            </if>
            <if test="datasetDesc != null">
                dataset_desc = #{datasetDesc},
            </if>
            <if test="shareType != null">
                share_type = #{shareType},
            </if>
            <if test="shareCondition != null">
                share_condition = #{shareCondition},
            </if>
            <if test="shareMethodCategory != null">
                share_method_category = #{shareMethodCategory},
            </if>
            <if test="shareMethod != null">
                share_method = #{shareMethod},
            </if>
            <if test="shareMethodDesc != null">
                share_method_desc = #{shareMethodDesc},
            </if>
            <if test="isOpen != null">
                is_open = #{isOpen},
            </if>
            <if test="openCondition != null">
                open_condition = #{openCondition},
            </if>
            <if test="updateFrequency != null">
                update_frequency = #{updateFrequency},
            </if>
            <if test="relDatasetCode != null">
                rel_dataset_code = #{relDatasetCode},
            </if>
            <if test="storageMedium != null">
                storage_medium = #{storageMedium},
            </if>
            <if test="storageLocation != null">
                storage_location = #{storageLocation},
            </if>
            <if test="dataLevel != null">
                data_level = #{dataLevel},
            </if>
            <if test="dataIndexSystem != null">
                data_index_system = #{dataIndexSystem},
            </if>
            <if test="secretFlag != null">
                secret_flag = #{secretFlag},
            </if>
            <if test="sourceType != null">
                source_type = #{sourceType},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateUserId != null">
                update_user_id = #{updateUserId},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="deleteFlag != null">
                delete_flag = #{deleteFlag},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="baseDelete" parameterType="java.util.Map">
        delete from dir_dataset
        <include refid="deleteWhereCause"/>
    </delete>

    <delete id="flagDelete" parameterType="java.util.Map">
        update dir_dataset set delete_flag=1
        <include refid="deleteWhereCause"/>
    </delete>

    <sql id="deleteWhereCause">
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="ids != null and ids!='' ">
                and id in
                <foreach collection="ids" open="(" close=")" item="item" separator=",">
                    #{item, jdbcType=VARCHAR}
                </foreach>
            </if>
        </where>
    </sql>

    <select id="selectActivityByDeptId" resultType="map">
        SELECT
        dba.id,
        dba.activity_name
        FROM
        drap_business_activity dba
        LEFT JOIN sys_dept sd ON dba.belong_dept = sd.id and sd.delete_flag=0
        WHERE TRUE AND sd.id=#{dept_id}
    </select>

    <select id="selectDatasetByActivityId" resultType="map">
        SELECT
        id,
        dataset_name
        FROM
        drap_dataset
        WHERE
        TRUE
        AND belong_dept_id = #{activity_id}
    </select>

    <resultMap id="result_DrapDatasetItem_Map" type="com.chinawiserv.dsp.dir.entity.po.catalog.DrapDatasetItem">
        <id column="id" property="id"/>
        <result column="item_code" property="itemCode"/>
        <result column="item_name" property="itemName"/>
        <result column="item_type" property="itemType"/>
        <result column="item_desc" property="itemDesc"/>
        <result column="belong_dept" property="belongDept"/>
        <result column="sensitive_remark" property="sensitiveRemark"/>
        <result column="update_frequency" property="updateFrequency"/>
        <result column="share_type" property="shareType"/>
        <result column="share_range" property="shareRange"/>
        <result column="share_method" property="shareMethod"/>
        <result column="share_condition_desc" property="shareConditionDesc"/>
        <result column="share_method_desc" property="shareMethodDesc"/>
        <result column="no_share_reason" property="noShareReason"/>
        <result column="is_open" property="isOpen"/>
        <result column="open_condition" property="openCondition"/>
        <result column="store_media" property="storeMedia"/>
        <result column="physics_store_location" property="physicsStoreLocation"/>
        <result column="code_index" property="codeIndex"/>
        <result column="create_user" property="createUser"/>
        <result column="create_time" property="createTime"/>
        <result column="update_user" property="updateUser"/>
        <result column="update_time" property="updateTime"/>
        <result column="item_length" property="itemLength"/>
        <result column="is_secret" property="isSecret"/>
    </resultMap>

    <resultMap id="itemVo" type="com.chinawiserv.dsp.dir.entity.po.catalog.DrapDatasetItem" extends="result_DrapDatasetItem_Map">
        <result column="dept_short_name" property="dept_short_name" />
        <result column="dataset_name" property="dataset_name" />
        <result column="system_name" property="system_name" />
        <result column="system_id" property="system_id" />
    </resultMap>
    <select id="selectDatasetItemByDatasetId" resultMap="result_DrapDatasetItem_Map">
        SELECT
        ddi.*
        FROM drap_dataset_item ddi
        LEFT JOIN drap_dataset_item_map ddim ON ddi.id=ddim.item_id
        LEFT JOIN drap_dataset dd ON ddim.dataset_id=dd.id
        WHERE TRUE AND dd.id=#{dataset_id}
    </select>

    <select id="selectDatasetItemByIds" resultMap="itemVo">
        SELECT
        ddi.*,sd.dept_short_name,dd.dataset_name,dis.system_name,dis.id AS system_id
        FROM
        drap_dataset_item ddi
        LEFT JOIN sys_dept sd ON ddi.belong_dept = sd.id
        LEFT JOIN drap_dataset_item_map ddim ON ddi.id = ddim.item_id
        LEFT JOIN drap_dataset dd ON ddim.dataset_id = dd.id
        LEFT JOIN drap_dataset_system_map ddsm ON dd.id = ddsm.dataset_id
        LEFT JOIN drap_info_system dis ON ddsm.system_id = dis.id
        WHERE TRUE
        <foreach collection="list" item="item" open="AND ddi.id IN (" separator="," close=")">
            #{item}
        </foreach>
        GROUP BY ddi.id
    </select>

    <resultMap id="result_DrapDataset_Map" type="com.chinawiserv.dsp.dir.entity.po.catalog.DrapDataset">
        <id column="id" property="id"/>
        <result column="region_code" property="regionCode"/>
        <result column="belong_dept_id" property="belongDeptId"/>
        <result column="belong_activity_id" property="belongActivityId"/>
        <result column="dataset_code" property="datasetCode"/>
        <result column="dataset_name" property="datasetName"/>
        <result column="category" property="category"/>
        <result column="sensitive_remark" property="sensitiveRemark"/>
        <result column="update_frequency" property="updateFrequency"/>
        <result column="dataset_desc" property="datasetDesc"/>
        <result column="share_type" property="shareType"/>
        <result column="share_condition_desc" property="shareConditionDesc"/>
        <result column="share_method" property="shareMethod"/>
        <result column="share_method_desc" property="shareMethodDesc"/>
        <result column="share_range" property="shareRange"/>
        <result column="no_share_reason" property="noShareReason"/>
        <result column="is_open" property="isOpen"/>
        <result column="open_condition" property="openCondition"/>
        <result column="rel_dataset_code" property="relDatasetCode"/>
        <result column="data_level" property="dataLevel"/>
        <result column="data_index_system" property="dataIndexSystem"/>
        <result column="is_secret" property="isSecret"/>
        <result column="store_media" property="storeMedia"/>
        <result column="physics_store_location" property="physicsStoreLocation"/>
        <result column="extend_code" property="extendCode"/>
        <result column="code_index" property="codeIndex"/>
        <result column="create_user" property="createUser"/>
        <result column="create_time" property="createTime"/>
        <result column="update_user" property="updateUser"/>
        <result column="update_time" property="updateTime"/>

        <result column="dept_short_name" property="dept_short_name" />
        <result column="dept_code" property="dept_code" />
        <result column="system_name" property="system_name" />
        <result column="system_id" property="system_id" />

        <result column="format_category" property="format_category" />
        <result column="format_type" property="format_type" />
    </resultMap>
    <select id="getDrapDatasetDetail" resultMap="result_DrapDataset_Map">
        SELECT
        dd.*,sd.dept_short_name,sd.dept_code,dis.system_name,dis.id AS system_id,ddef.format_category,ddef.format_type
        FROM
        drap_dataset dd
        LEFT JOIN sys_dept sd ON dd.belong_dept_id = sd.id
        LEFT JOIN drap_dataset_system_map ddsm ON dd.id = ddsm.dataset_id
        LEFT JOIN drap_info_system dis ON ddsm.system_id = dis.id
        LEFT JOIN drap_dataset_ext_format ddef ON ddef.dataset_id=dd.id
        WHERE
        dd.id = #{id}
    </select>

    <resultMap id="ExcelMap" type="com.chinawiserv.dsp.dir.entity.po.catalog.ExportDatasetExcel">
        <result column="item_name" property="item_name"/>
        <result column="item_type" property="item_type"/>
        <result column="item_length" property="item_length"/>
        <result column="share_type" property="share_type"/>
        <result column="share_condition" property="share_condition"/>
        <result column="share_method_category" property="share_method_category"/>
        <result column="share_method" property="share_method"/>
        <result column="is_open" property="is_open"/>
        <result column="open_condition" property="open_condition"/>
        <result column="update_frequency" property="update_frequency"/>
        <result column="dataset_name" property="dataset_name"/>
        <result column="dataset_code" property="dataset_code"/>
        <result column="region_dept_name" property="region_dept_name"/>
        <result column="dataset_desc" property="dataset_desc"/>
        <result column="belong_dept_name" property="belong_dept_name"/>
        <result column="belong_dept_no" property="belong_dept_no"/>
        <result column="create_time" property="create_time"/>
        <result column="format_category" property="format_category"/>
        <result column="format_type" property="format_type"/>
        <result column="classify_structure_name" property="classify_structure_name"/>

        <result column="total_storage" property="total_storage"/>
        <result column="structure_count" property="structure_count"/>
        <result column="shared_storage" property="shared_storage"/>
        <result column="shared_structure_count" property="shared_structure_count"/>
        <result column="opened_storage" property="opened_storage"/>
        <result column="opened_structure_count" property="opened_structure_count"/>
    </resultMap>
    <select id="selectExportLists" resultMap="ExcelMap">
        SELECT
            dd.item_name,
            (
                SELECT dict_name FROM sys_dict WHERE category = 'dataitemType'
                  AND dict_code = dd.item_type
            ) AS item_type,
            dd.item_length,
            (
                SELECT dict_name FROM sys_dict WHERE category = 'dataSetShareType'
                  AND dict_code = dd.share_type
            ) AS share_type,
            dd.share_condition,
            (
                SELECT dict_name FROM sys_dict WHERE category = 'requirementExpectGetType'
                  AND dict_code = dd.share_method_category
            ) AS share_method_category,
            (
                SELECT dict_name FROM sys_dict WHERE category = 'requirementExpectGetType'
                  AND dict_code = dd.share_method
            ) AS share_method,
            (
                CASE dd.is_open WHEN 0 THEN '否' WHEN 1 THEN '是' END
            ) AS is_open,
            dd.open_condition,
            (
                SELECT dict_name FROM sys_dict WHERE category = 'requirementExpectUpdateFrequence'
                  AND dict_code = dd.update_frequency
            ) AS update_frequency,
            d.dataset_name, ddcm.info_resource_code as dataset_code, d.dataset_desc,
            sd.region_dept_name, d.belong_dept_name, d.belong_dept_no, d.create_time,
            (
                SELECT dict_name FROM sys_dict, dir_dataset_ext_format ddef WHERE category = 'resourceFormat'
                  AND ddef.dataset_id = d.id AND dict_code = ddef.format_category
            ) AS format_category,
            (
                SELECT dict_name FROM sys_dict, dir_dataset_ext_format ddef WHERE category = 'resourceFormat'
                  AND ddef.dataset_id = d.id AND dict_code = ddef.format_type
            ) AS format_type,
            dc.classify_structure_name,
            total_storage,
            structure_count,
            shared_storage,
            shared_structure_count,
            opened_storage,
            opened_structure_count
        FROM
            dir_dataset d
        LEFT JOIN dir_dataitem dd ON (d.id = dd.dataset_id AND dd.delete_flag = 0)
        LEFT JOIN v_sys_region_dept sd ON sd.id = d.belong_dept_Type
        LEFT JOIN dir_dataset_classify_map ddcm ON (d.id = ddcm.dataset_id AND ddcm.delete_flag = 0 AND ddcm.rel_flag = 0)
        LEFT JOIN dir_classify dc ON ddcm.classify_id = dc.id
        <!-- LEFT JOIN dir_national_classify dnc ON dnc.classify_code=dc.national_code -->
        LEFT JOIN dir_dataset_survey dds ON dds.dataset_id = d.id
        WHERE d.delete_flag = 0
        <if test="tree_codes != null">
            <foreach collection="tree_codes" item="item" open="AND (" separator=" OR " close=")">
                dc.tree_code LIKE  CONCAT(#{item},"%")
            </foreach>
        </if>
        <if test="dataset_name != null and dataset_name != '' ">
            AND d.dataset_name LIKE CONCAT("%",#{dataset_name},"%")
        </if>
    </select>

    <insert id="insertListDataset">
        insert into dir_dataset(id,region_code,charge_dept_id,dataset_code,dataset_name,alias,belong_dept_type,belong_dept_id,belong_dept_name,belong_dept_no,dataset_desc,share_type,share_condition,share_method_category,share_method,share_method_desc,is_open,open_condition,update_frequency,rel_dataset_code,storage_medium,storage_location,data_level,data_index_system,secret_flag,source_type,status,create_user_id,create_time,update_user_id,update_time) values
        <foreach collection="list" item="item" separator=",">
            (
            #{item.id},#{item.regionCode},#{item.chargeDeptId},#{item.datasetCode},#{item.datasetName},#{item.alias},#{item.belongDeptType},
            #{item.belongDeptId},#{item.belongDeptName},#{item.belongDeptNo},#{item.datasetDesc},#{item.shareType},#{item.shareCondition},#{item.shareMethodCategory},
            #{item.shareMethod},#{item.shareMethodDesc},#{item.isOpen},#{item.openCondition},#{item.updateFrequency},
            #{item.relDatasetCode},#{item.storageMedium},#{item.storageLocation},#{item.dataLevel},#{item.dataIndexSystem},
            #{item.secretFlag},#{item.sourceType},#{item.status},#{item.createUserId},#{item.createTime},#{item.updateUserId},
            #{item.updateTime}
            )
        </foreach>
    </insert>

    <select id="selectDatasetByNameAndClassifyId" resultMap="BaseResultMap">
        SELECT dd.*
        FROM dir_dataset dd
        LEFT JOIN dir_dataset_classify_map ddcm ON dd.id=ddcm.dataset_id
        WHERE dd.dataset_name=#{datasetName} AND ddcm.classify_id=#{classifyId}
    </select>
</mapper>

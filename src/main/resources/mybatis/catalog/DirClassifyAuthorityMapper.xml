<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chinawiserv.dsp.dir.mapper.catalog.DirClassifyAuthorityMapper">

    <!-- 开启二级缓存 -->
    <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.chinawiserv.dsp.dir.entity.po.catalog.DirClassifyAuthority">
        <id column="id" property="id"/>
        <result column="auth_obj_type" property="authObjType"/>
        <result column="auth_obj_id" property="authObjId"/>
        <result column="classify_id" property="classifyId"/>
        <result column="auth_detail" property="authDetail"/>
        <result column="distributor_id" property="distributorId"/>
        <result column="distributor_opinion" property="distributorOpinion"/>
        <result column="distributor_date" property="distributorDate"/>
    </resultMap>

    <resultMap id="BaseResultVoMap" extends="BaseResultMap"
               type="com.chinawiserv.dsp.dir.entity.vo.catalog.DirClassifyAuthorityVo">
        <result column="fid" property="fid"/>
        <result column="classify_name" property="classifyName"/>
    </resultMap>

    <!-- 通用查询过滤条件 -->
    <sql id="queryConditions">
        <where>
            <if test="id != null">
                t.id = #{id,jdbcType=VARCHAR}
            </if>
            <if test="authObjType != null">
                AND t.auth_obj_type = #{authObjType,jdbcType=VARCHAR}
            </if>
            <if test="authObjId != null">
                AND t.auth_obj_id = #{authObjId,jdbcType=VARCHAR}
            </if>
        </where>
    </sql>

    <sql id="baseSelectVo">
        SELECT t.*,d.fid,d.classify_name FROM dir_classify_authority t
        LEFT JOIN dir_classify d ON t.classify_id = d.id
    </sql>

    <select id="selectVoPage" parameterType="java.util.Map" resultMap="BaseResultVoMap">
        <include refid="baseSelectVo"></include>
        <include refid="queryConditions"></include>
    </select>

    <select id="selectVoById" parameterType="java.lang.String" resultMap="BaseResultVoMap">
        <include refid="baseSelectVo"></include> WHERE t.id = #{id}
    </select>

    <select id="selectVoCount" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT count(1) FROM dir_classify_authority t
        <include refid="queryConditions"></include>
    </select>

    <select id="selectVoList" parameterType="java.util.Map" resultMap="BaseResultVoMap">
        <include refid="baseSelectVo"></include>
        <include refid="queryConditions"></include>
    </select>

    <insert id="baseInsert" parameterType="com.chinawiserv.dsp.dir.entity.po.catalog.DirClassifyAuthority">
        insert into dir_classify_authority(id,auth_obj_type,auth_obj_id,classify_id,auth_detail,) values(
            #{id},#{authObjType},#{authObjId},#{classifyId},#{authDetail},        )
    </insert>

    <update id="baseUpdate" parameterType="com.chinawiserv.dsp.dir.entity.po.catalog.DirClassifyAuthority">
        update dir_classify_authority
        <set>
            <if test="id != null">
                id = #{id},
            </if>
            <if test="authObjType != null">
                auth_obj_type = #{authObjType},
            </if>
            <if test="authObjId != null">
                auth_obj_id = #{authObjId},
            </if>
            <if test="classifyId != null">
                classify_id = #{classifyId},
            </if>
            <if test="authDetail != null">
                auth_detail = #{authDetail},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="baseDelete" parameterType="java.util.Map">
        delete from dir_classify_authority
        <include refid="deleteWhereCause"/>
    </delete>

    <delete id="deleteByVo" parameterType="com.chinawiserv.dsp.dir.entity.vo.catalog.DirClassifyAuthorityVo">
        delete from dir_classify_authority
        <include refid="deleteWhereCause"/>
    </delete>

    <sql id="deleteWhereCause">
        <where>
            <if test="id != null">
                AND id = #{id}
            </if>
            <if test="authObjType != null">
                AND auth_obj_type = #{authObjType}
            </if>
            <if test="authObjId != null">
                AND auth_obj_id = #{authObjId}
            </if>
            <if test="classifyId != null">
                AND classify_id = #{classifyId, jdbcType=VARCHAR}
            </if>
            <if test="classifyIdArray != null">
                AND classify_id IN
                <foreach collection="classifyIdArray" open="(" close=")" item="item" separator=",">
                    #{item, jdbcType=VARCHAR}
                </foreach>
            </if>
        </where>
    </sql>

    <select id="selectAuthorityIdForLoginUser" resultType="java.lang.String">
        select distinct(s.tree_code) as tree_code from(
            select dc.tree_code from dir_classify_authority dca
            left join dir_classify dc on dca.classify_id = dc.id
            where dca.auth_obj_type ='2' and dc.delete_flag=0 and dca.auth_obj_id = #{loginUserId,jdbcType=VARCHAR}
            union
            select dc2.tree_code from dir_classify_authority dca2
            left join dir_classify dc2 on dca2.classify_id = dc2.id
            where dca2.auth_obj_type ='1' and dc2.delete_flag=0 and dca2.auth_obj_id =  (select su.dept_id from sys_user su where su.delete_flag=0 and su.id = #{loginUserId,jdbcType=VARCHAR})
        ) s
    </select>


</mapper>

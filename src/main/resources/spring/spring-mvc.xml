<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
						   http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
						   http://www.springframework.org/schema/context
						   http://www.springframework.org/schema/context/spring-context-4.3.xsd
						   http://www.springframework.org/schema/aop
						   http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
						   http://www.springframework.org/schema/tx
						   http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
						   http://www.springframework.org/schema/mvc
						   http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
                           http://www.springframework.org/schema/task
		                   http://www.springframework.org/schema/task/spring-task-4.3.xsd"
	   default-lazy-init="false">

	<!-- 配置注解扫描的包路径 -->
	<context:component-scan base-package="com.chinawiserv.dsp.*" >
	</context:component-scan>

	<!-- 开启aop，对类代理 -->
	<aop:config proxy-target-class="true" />
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<context:property-placeholder location="classpath:/conf/*.properties" />

	<!-- 开启spring mvc的注解 -->
	<mvc:annotation-driven />

	<!-- 内容协商视图解析器；根据客户端不同的请求决定不同的view进行响应 -->
	<!-- 会自动根据解析的contentType来决定使用哪个视图解析器（默认使用整个web应用中的viewResolver -->
	<bean id="contentNegotiatingViewResolver"
		  class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!-- 内容协商管理器 用于决定media type -->
		<property name="contentNegotiationManager" ref="contentNegotiationManager"></property>
		<property name="viewResolvers" ref="internalResourceViewResolver"></property>
	</bean>

	<!-- 内容协商管理配置，检查扩展名、检查Parameter、检查Accept Header -->
	<bean id="contentNegotiationManager"
		  class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<!-- 是否启用扩展名支持，默认就是true -->
		<property name="favorPathExtension" value="true" />

		<!-- 是否启用参数支持，默认就是true -->
		<property name="favorParameter" value="true" />

		<!-- 是否忽略掉accept header，默认就是false -->
		<property name="ignoreAcceptHeader" value="false" />

		<!-- 如果启用参数支持，这里指定参数名称，favorParameter是true时起作用 -->
		<property name="parameterName" value="format" />

		<!--扩展名到mimeType的映射；favorPathExtension, favorParameter是true时起作用 -->
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="html" value="text/html" />
				<entry key="htm" value="text/html" />
			</map>
		</property>
		<!-- 默认的content type -->
		<property name="defaultContentType" value="text/html" />
	</bean>

	<!-- 自动匹配视图 -->
	<bean id="internalResourceViewResolver"
		  class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="contentType" value="text/html" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 资源映射 -->
	<mvc:resources location="/images/" mapping="/img/**" />
	<mvc:resources location="/WEB-INF/static/app/" mapping="/app/**" />
	<mvc:resources location="/WEB-INF/static/js/" mapping="/js/**" />
	<mvc:resources location="/WEB-INF/static/css/" mapping="/css/**" />
	<mvc:resources location="/WEB-INF/static/images/" mapping="/images/**" />
	<mvc:resources location="/WEB-INF/static/plugins/"
				   mapping="/plugins/**" />


<!-- 	<mvc:view-controller path="/UEditorUploadAction/upload" view-name="/ueditor/jsp/controller"/>
 -->	
	<!-- 定义文件上传解析器 -->
	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设定默认编码 -->
		<property name="defaultEncoding" value="UTF-8"></property>
		<!-- 设定文件上传的最大值5MB，5*1024*1024 -->
		<property name="maxUploadSize" value="5242880"></property>
	</bean>

	<mvc:annotation-driven>
		<!-- 编码转换 -->
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/plain;charset=UTF-8</value>
						<value>text/html;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
			</bean>
			<!-- 配置Fastjson支持 -->
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json</value>
					</list>
				</property>
				<!-- FastJsonConfig -->
				<property name="fastJsonConfig" ref="fastJsonConfig" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
 

	<bean id="fastJsonConfig" class="com.alibaba.fastjson.support.config.FastJsonConfig">
		<!-- Default charset -->
		<property name="charset" value="UTF-8" />
		<!-- Default dateFormat -->
		<property name="dateFormat" value="yyyy-MM-dd HH:mm:ss" />
		<!-- Feature -->
		<!--<property name="features">-->
			<!--<list>-->
				<!--<value>Your feature</value>-->
			<!--</list>-->
		<!--</property>-->
		<!--&lt;!&ndash; SerializerFeature &ndash;&gt;-->
		<!--<property name="serializerFeatures">-->
			<!--<list>-->
				<!--<value>Your serializer feature</value>-->
			<!--</list>-->
		<!--</property>-->
		<!--&lt;!&ndash; Global SerializeFilter &ndash;&gt;-->
		<!--<property name="serializeFilters">-->
			<!--<list>-->
				<!--<ref bean="Your serializer filter"/>-->
			<!--</list>-->
		<!--</property>-->
		<!--&lt;!&ndash; Class Level SerializeFilter &ndash;&gt;-->
		<!--<property name="classSerializeFilters">-->
			<!--<map>-->
				<!--<entry key="Your filter class" value-ref="Your serializer filter"/>-->
			<!--</map>-->
		<!--</property>-->
	</bean>

	<!-- 拦截器 -->
	<mvc:interceptors>

		<!--&lt;!&ndash; 登录拦截器 &ndash;&gt;-->
		<!--<mvc:interceptor>-->
			<!--<mvc:mapping path="/**" />-->
			<!--<bean class="com.chinawiserv.dsp.dcs.dcm.interceptor.LoginInterceptor" />-->
		<!--</mvc:interceptor>-->

		<!--&lt;!&ndash; 权限拦截器 &ndash;&gt;-->
		<mvc:interceptor>
			<mvc:mapping path="/**" />
            <mvc:exclude-mapping path="/**/fonts/*"/>
            <mvc:exclude-mapping path="/**/*.css"/>
            <mvc:exclude-mapping path="/**/*.js"/>
            <mvc:exclude-mapping path="/**/*.png"/>
            <mvc:exclude-mapping path="/**/*.gif"/>
            <mvc:exclude-mapping path="/**/*.jpg"/>
            <mvc:exclude-mapping path="/**/*.jpeg"/>
			<bean class="com.chinawiserv.dsp.base.common.inteceptor.SpringInteceptor">

            </bean>
		</mvc:interceptor>

	</mvc:interceptors>

	<!--<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>-->

	<!-- 事务管理器 -->
	<bean id="transactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource_dcm" />
	</bean>
	<!-- 通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 把名称为 find、statistic、query 开头的方法配置为只读事物 -->
			<tx:method name="find*"       no-rollback-for="Exception"  read-only="true"  isolation="READ_COMMITTED" propagation="REQUIRED"/>
			<tx:method name="select*"       no-rollback-for="Exception"  read-only="true"  isolation="READ_COMMITTED" propagation="REQUIRED"/>
			<tx:method name="get*"       no-rollback-for="Exception"  read-only="true"  isolation="READ_COMMITTED" propagation="REQUIRED"/>
			<tx:method name="statistic*"  no-rollback-for="Exception"  read-only="true"  isolation="READ_COMMITTED" propagation="REQUIRED"/>
			<tx:method name="query*"      no-rollback-for="Exception"  read-only="true"  isolation="READ_COMMITTED" propagation="REQUIRED"/>

			<!-- 把名称为除 find、statistic、query 开头的方法以外的所有方法配置为读写事物 -->
			<tx:method name="*" rollback-for="Throwable" read-only="false" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	<!-- 切面 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice"
					 pointcut="execution(* com.chinawiserv.dsp.*.service..*.*(..))" />
	</aop:config>

    <!-- 定时任务 -->
	<task:executor id="executor" pool-size="10"></task:executor>
	<task:scheduler id="scheduler" pool-size="20"></task:scheduler>
	<task:annotation-driven executor="executor" scheduler="scheduler"></task:annotation-driven>

</beans>